# This is a basic workflow to help you get started with Actions
name: Task3FixAccess
env:
  LC_ALL: "en_US.UTF-8"
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
  ARM_TENANT_ID: ${{ secrets.AZURE_SUBSCRIPTION_TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.SERVICE_PRINCIPAL_APPID }}
  ARM_CLIENT_SECRET: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  first_job:
    runs-on: ubuntu-latest
    steps:
    - name: Git clone my repo
      uses: actions/checkout@v1

    - name: printPwd
      run: pwd

    #- name: Install Terraform
    #  run: curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      #sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      #sudo apt-get update && sudo apt-get install terraform

    - name: printPwd
      run: cd ./Task3

    - name: print ls
      run: ls -la
    - name: printT
      run: |
            cd ./Task3
            terraform init
            terraform plan
            terraform applay
#    - name: terraform run
#      run: |
#            cd /home/runner/work/EXADEL-DevOps-SandBox-June2022/EXADEL-DevOps-SandBox-June2022/Task3/
#            terraform init
#            terraform plan
#            terraform apply -auto-approve



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
#  # This workflow contains a single job called "build"
#  build:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v3
#
#      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!
#
#      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.